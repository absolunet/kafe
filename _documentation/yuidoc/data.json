{
    "project": {
        "name": "kafe",
        "description": "kafe RULZ",
        "version": "kafe version 2-alpha",
        "url": "http://github.com/absolunet/kafe",
        "logo": "http://www.absolunet.com/images/Logo_Absolunet.gif"
    },
    "files": {
        "kafe/cms/_cms.js": {
            "name": "kafe/cms/_cms.js",
            "modules": {
                "kafe.cms": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "kafe/cms/drupal.js": {
            "name": "kafe/cms/drupal.js",
            "modules": {},
            "classes": {
                "kafe.cms.drupal": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/cms/magento.js": {
            "name": "kafe/cms/magento.js",
            "modules": {},
            "classes": {
                "kafe.cms.magento": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/cms/sitecore.js": {
            "name": "kafe/cms/sitecore.js",
            "modules": {},
            "classes": {
                "kafe.cms.sitecore": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/ext/_ext.js": {
            "name": "kafe/ext/_ext.js",
            "modules": {
                "kafe.ext": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "kafe/ext/addthis.js": {
            "name": "kafe/ext/addthis.js",
            "modules": {},
            "classes": {
                "kafe.ext.addthis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/plugin/_plugin.js": {
            "name": "kafe/plugin/_plugin.js",
            "modules": {
                "kafe.plugin": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "kafe/plugin/carousel.js": {
            "name": "kafe/plugin/carousel.js",
            "modules": {},
            "classes": {
                "kafe.plugin.carousel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/plugin/menu.js": {
            "name": "kafe/plugin/menu.js",
            "modules": {},
            "classes": {
                "kafe.plugin.menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/plugin/sticky.js": {
            "name": "kafe/plugin/sticky.js",
            "modules": {},
            "classes": {
                "kafe.plugin.sticky": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/date.js": {
            "name": "kafe/date.js",
            "modules": {},
            "classes": {
                "kafe.date": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/form.js": {
            "name": "kafe/form.js",
            "modules": {},
            "classes": {
                "kafe.form": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/geolocation.js": {
            "name": "kafe/geolocation.js",
            "modules": {},
            "classes": {
                "kafe.geolocation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/kafe.js": {
            "name": "kafe/kafe.js",
            "modules": {
                "kafe": 1
            },
            "classes": {
                "kafe": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/number.js": {
            "name": "kafe/number.js",
            "modules": {},
            "classes": {
                "kafe.number": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/storage.js": {
            "name": "kafe/storage.js",
            "modules": {},
            "classes": {
                "kafe.storage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/string-encrypt.js": {
            "name": "kafe/string-encrypt.js",
            "modules": {},
            "classes": {
                "kafe.string.encrypt": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/string-validate.js": {
            "name": "kafe/string-validate.js",
            "modules": {},
            "classes": {
                "kafe.string.validate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/string.js": {
            "name": "kafe/string.js",
            "modules": {},
            "classes": {
                "kafe.string": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/style.js": {
            "name": "kafe/style.js",
            "modules": {},
            "classes": {
                "kafe.style": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "kafe/url.js": {
            "name": "kafe/url.js",
            "modules": {},
            "classes": {
                "kafe.url": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "kafe.cms": {
            "name": "kafe.cms",
            "submodules": {},
            "classes": {
                "kafe.cms.drupal": 1,
                "kafe.cms.magento": 1,
                "kafe.cms.sitecore": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "kafe/cms/sitecore.js",
            "line": 11,
            "description": "methods for CMS",
            "itemtype": "main"
        },
        "kafe.ext": {
            "name": "kafe.ext",
            "submodules": {},
            "classes": {
                "kafe.ext.addthis": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "kafe/ext/addthis.js",
            "line": 4,
            "description": "extensions for external plugins",
            "itemtype": "main"
        },
        "kafe.plugin": {
            "name": "kafe.plugin",
            "submodules": {},
            "classes": {
                "kafe.plugin.carousel": 1,
                "kafe.plugin.menu": 1,
                "kafe.plugin.sticky": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "kafe/plugin/sticky.js",
            "line": 10,
            "description": "homebrewed plugins",
            "itemtype": "main"
        },
        "kafe": {
            "name": "kafe",
            "submodules": {},
            "classes": {
                "kafe.date": 1,
                "kafe.form": 1,
                "kafe.geolocation": 1,
                "kafe": 1,
                "kafe.number": 1,
                "kafe.storage": 1,
                "kafe.string.encrypt": 1,
                "kafe.string.validate": 1,
                "kafe.string": 1,
                "kafe.style": 1,
                "kafe.url": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "kafe/url.js",
            "line": 26,
            "description": "### Version 2-alpha\nkafe RULZ",
            "itemtype": "main"
        }
    },
    "classes": {
        "kafe.cms.drupal": {
            "name": "kafe.cms.drupal",
            "shortname": "kafe.cms.drupal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe.cms",
            "namespace": "",
            "file": "kafe/cms/drupal.js",
            "line": 12,
            "description": "### Version 0.1\nAdditionnal methods for Drupal"
        },
        "kafe.cms.magento": {
            "name": "kafe.cms.magento",
            "shortname": "kafe.cms.magento",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe.cms",
            "namespace": "",
            "file": "kafe/cms/magento.js",
            "line": 11,
            "description": "### Version 0.1\nAdditionnal methods for Magento"
        },
        "kafe.cms.sitecore": {
            "name": "kafe.cms.sitecore",
            "shortname": "kafe.cms.sitecore",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe.cms",
            "namespace": "",
            "file": "kafe/cms/sitecore.js",
            "line": 11,
            "description": "### Version 0.1\nAdditionnal methods for Sitecore"
        },
        "kafe.ext.addthis": {
            "name": "kafe.ext.addthis",
            "shortname": "kafe.ext.addthis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe.ext",
            "namespace": "",
            "file": "kafe/ext/addthis.js",
            "line": 4,
            "description": "### Version 0.1\nAdditionnal methods for AddThis"
        },
        "kafe.plugin.carousel": {
            "name": "kafe.plugin.carousel",
            "shortname": "kafe.plugin.carousel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe.plugin",
            "namespace": "",
            "file": "kafe/plugin/carousel.js",
            "line": 280,
            "description": "### Version 1.0.2\nCarousel, image scroller, ticker, whatever you wanna call it...\n\nThey can also be interacted with remotely by first, linking to the carousel using the `data-kafecarousel-id` attribute and then choosing a specific action with the `data-kafecarousel-action` attribute.\nPossible actions are `nav`, `start`, `prev`, `next`, `end`, `items`, `item`, `play`, `pause`, `position`, `total`, `status` and `status-num`."
        },
        "kafe.plugin.menu": {
            "name": "kafe.plugin.menu",
            "shortname": "kafe.plugin.menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe.plugin",
            "namespace": "",
            "file": "kafe/plugin/menu.js",
            "line": 8,
            "description": "### Version 1.0\nAttaches javascript behaviors to an HTML menu structure to create a *dropdown* style navigation.\n\nTo preserve flexibility, the plugin only controls events, speeds, delays and callbacks. It will only manage a single custom class (`kafe-quickmenu-open`) on the handle elements upon opening or closing, leaving the positioning, visibility and other asthetic responsabilities to its css."
        },
        "kafe.plugin.sticky": {
            "name": "kafe.plugin.sticky",
            "shortname": "kafe.plugin.sticky",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe.plugin",
            "namespace": "",
            "file": "kafe/plugin/sticky.js",
            "line": 10,
            "description": "### Version 0.1\nSticky box"
        },
        "kafe.date": {
            "name": "kafe.date",
            "shortname": "kafe.date",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/date.js",
            "line": 54,
            "description": "### Version 1.2\nAdditionnal methods for date manipulation"
        },
        "kafe.form": {
            "name": "kafe.form",
            "shortname": "kafe.form",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/form.js",
            "line": 4,
            "description": "### Version 1.4.1\nUtilitary methods for html forms and related interactions."
        },
        "kafe.geolocation": {
            "name": "kafe.geolocation",
            "shortname": "kafe.geolocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/geolocation.js",
            "line": 36,
            "description": "### Version 1.0\nMethods to access geolocalization information about the client."
        },
        "kafe": {
            "name": "kafe",
            "shortname": "kafe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/kafe.js",
            "line": 112,
            "description": "kafe core"
        },
        "kafe.number": {
            "name": "kafe.number",
            "shortname": "kafe.number",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/number.js",
            "line": 4,
            "description": "### Version 1.0\nAdditionnal manipulation methods for numbers."
        },
        "kafe.storage": {
            "name": "kafe.storage",
            "shortname": "kafe.storage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/storage.js",
            "line": 220,
            "description": "### Version 1.1\nEasily access, sort and manipulate local and session storage values."
        },
        "kafe.string.encrypt": {
            "name": "kafe.string.encrypt",
            "shortname": "kafe.string.encrypt",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "kafe.string"
            ],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/string-encrypt.js",
            "line": 10,
            "description": "### Version 1.0\nString encryption tools."
        },
        "kafe.string.validate": {
            "name": "kafe.string.validate",
            "shortname": "kafe.string.validate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "kafe.string"
            ],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/string-validate.js",
            "line": 11,
            "description": "### Version 1.0\nString validation tools."
        },
        "kafe.string": {
            "name": "kafe.string",
            "shortname": "kafe.string",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/string.js",
            "line": 11,
            "description": "### Version 1.2\nAdditionnal methods for string manipulation and generation."
        },
        "kafe.style": {
            "name": "kafe.style",
            "shortname": "kafe.style",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/style.js",
            "line": 4,
            "description": "### Version 1.3\nCommon adjustment and manipulation methods for html layouts."
        },
        "kafe.url": {
            "name": "kafe.url",
            "shortname": "kafe.url",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "kafe",
            "namespace": "",
            "file": "kafe/url.js",
            "line": 26,
            "description": "### Version 1.0\nManipulation tools for route-based urls."
        }
    },
    "classitems": [
        {
            "file": "kafe/ext/addthis.js",
            "line": 13,
            "description": "Refresh addthis share data",
            "itemtype": "method",
            "name": "refreshData",
            "params": [
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "url",
                            "description": "The url",
                            "type": "String"
                        },
                        {
                            "name": "title",
                            "description": "The page title",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "kafe.ext.addthis",
            "module": "kafe.ext"
        },
        {
            "file": "kafe/plugin/carousel.js",
            "line": 292,
            "description": "Attach behaviors to the carousel structure.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "Initial configurations",
                    "type": "Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "`id` of the slide container.",
                            "type": "String"
                        },
                        {
                            "name": "wrap",
                            "description": "If true, will loop back to the first slide upon reaching the last one. The same is enabled in reverse.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "transition",
                            "description": "Animation used during a transition. Possible values are `slideLeft`, `slideRight`, `slideUp`, `slideDown` and `fade`.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'slideLeft'"
                        },
                        {
                            "name": "speed",
                            "description": "Duration (in milliseconds) of the transition.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "500"
                        },
                        {
                            "name": "startId",
                            "description": "Index of the starting slide, starting at 1.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "autostart",
                            "description": "Allows slides to change without a user interaction after a chosen delay.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "undefined",
                            "props": [
                                {
                                    "name": "interval",
                                    "description": "Delay (in milliseconds) before starting a transition to the next slide. The transition duration is included in the delay. As an example, an `interval` of 3000 combined with a `speed` of 500 will hold a slide still for 2500 milliseconds before starting the transition.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "3000"
                                }
                            ]
                        },
                        {
                            "name": "preSwitchCallback",
                            "description": "Trigged upon receiving an instruction to change the current slide but before starting the transition. The following object is passed as a first argument:",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "undefined",
                            "props": [
                                {
                                    "name": "data",
                                    "description": "An object containing information relative to the transition in progress.",
                                    "type": "Object"
                                },
                                {
                                    "name": "data.action",
                                    "description": "Current action being performed. Possible values are `prev`, `next` or `item` when using a specific index.",
                                    "type": "String"
                                },
                                {
                                    "name": "data.source",
                                    "description": "Information about the slide being changed.",
                                    "type": "Object"
                                },
                                {
                                    "name": "data.source.position",
                                    "description": "Index of the source slide.",
                                    "type": "Number"
                                },
                                {
                                    "name": "data.source.obj",
                                    "description": "Reference to the source slide.",
                                    "type": "JQueryObject"
                                },
                                {
                                    "name": "data.target",
                                    "description": "Information about the destination slide.",
                                    "type": "Object"
                                },
                                {
                                    "name": "data.target.position",
                                    "description": "Index of the target slide.",
                                    "type": "Number"
                                },
                                {
                                    "name": "data.target.obj",
                                    "description": "Reference to the target slide.",
                                    "type": "JQueryObject"
                                }
                            ]
                        },
                        {
                            "name": "postSwitchCallback",
                            "description": "Trigged upon receiving an instruction to change the current slide but before starting the transition. Passes the same argument object as the `preSwitchCallback`.",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "statusLink",
                            "description": "If true, will generate navigation links in elements linked to the carousel via `data-kafecarousel-id` and the `data-kafecarousel-action=\"status\"` attribute.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "statusBullet",
                            "description": "Text used as the content of generated link in a `statusLink` navigation.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'&bull;'"
                        }
                    ]
                }
            ],
            "example": [
                "\n\t// Sample carousel structure\n\t<section class=\"home-carousel\">\n\t\t<ul id=\"home-slides\">\n\t\t\t<li><a href=\"#\"><img src=\"/images/slide-01.jpg\" /></a></li>\n\t\t\t<li><a href=\"#\"><img src=\"/images/slide-01.jpg\" /></a></li>\n\t\t\t<li><a href=\"#\"><img src=\"/images/slide-01.jpg\" /></a></li>\n\t\t</ul>\n\t\t<a href=\"\" data-kafecarousel-id=\"home-slides\" data-kafecarousel-action=\"prev\">Back</a>\n\t\t<a href=\"\" data-kafecarousel-id=\"home-slides\" data-kafecarousel-action=\"next\">Next</a>\n\t\t<div data-kafecarousel-id=\"home-slides\" data-kafecarousel-action=\"status\"></div>\n\t</section>",
                "\n\t// Attach behaviors using...\n\tkafe.plugin.carousel.init({ id: 'home-slides' });",
                "\n\t// Carousels can be remotely interacted with using custom data attributes...\n\tkafe.plugin.carousel.init({ id: 'home-slides' });"
            ],
            "class": "kafe.plugin.carousel",
            "module": "kafe.plugin"
        },
        {
            "file": "kafe/plugin/menu.js",
            "line": 20,
            "description": "Attach behaviors to the menu structure.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "Initial configurations.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "container",
                            "description": "Root element of the menu strusture.",
                            "type": "JQuerySelector"
                        },
                        {
                            "name": "handle",
                            "description": "Children element of the container that will serve as a handle to open and close the submenu.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'li'"
                        },
                        {
                            "name": "submenus",
                            "description": "Children element of the handle that will serve as a submenu, opening and closing when the handle is used.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'ul'"
                        },
                        {
                            "name": "animation",
                            "description": "Animation used when opening and closing the submenus.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'slide'"
                        },
                        {
                            "name": "openSpeed",
                            "description": "Duration (in milliseconds) of the opening animation.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "200"
                        },
                        {
                            "name": "openDelay",
                            "description": "Delay (in milliseconds) used when entering the handle before starting the opening animation.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "500"
                        },
                        {
                            "name": "closeSpeed",
                            "description": "Duration (in milliseconds) of the closing animation.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "150"
                        },
                        {
                            "name": "closeDelay",
                            "description": "Delay (in milliseconds) used when exiting the handle before starting the closing animation.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "400"
                        },
                        {
                            "name": "enterCallback",
                            "description": "Upon entering a handle, will be triggered after the delay but before the animation. The current submenu is passed as a first argument.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "leaveCallback",
                            "description": "Upon exiting a handle, will be triggered after the delay but before the animation. The current submenu is passed as a first argument.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n\t// Sample menu structure\n\t<nav id=\"main-menu\">\n\t\t<ul>\n\t\t\t<li><a href=\"#\">Menu 1</a>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a href=\"#\">Submenu 1.1</a></li>\n\t\t\t\t\t<li><a href=\"#\">Submenu 1.2</a></li>\n\t\t\t\t\t<li><a href=\"#\">Submenu 1.3</a></li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li><a href=\"#\">Menu 2</a>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a href=\"#\">Submenu 2.1</a></li>\n\t\t\t\t\t<li><a href=\"#\">Submenu 2.2</a></li>\n\t\t\t\t\t<li><a href=\"#\">Submenu 2.3</a></li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t</nav>",
                "\n\t// Attach behaviors using...\n\tkafe.plugin.menu.init({ container: '#main-menu > ul' });",
                "\n\t// Or use the jQuery alternative...\n\t$('#main-menu > ul').kafeMenu();"
            ],
            "class": "kafe.plugin.menu",
            "module": "kafe.plugin"
        },
        {
            "file": "kafe/plugin/sticky.js",
            "line": 20,
            "description": "Initialize sticky",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "selector",
                            "description": "TODO",
                            "type": "JQuerySelector"
                        },
                        {
                            "name": "align",
                            "description": "TODO",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'left'"
                        },
                        {
                            "name": "contains",
                            "description": "TODO",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "container",
                            "description": "TODO",
                            "type": "JQuerySelector",
                            "optional": true,
                            "optdefault": "PARENT"
                        }
                    ]
                }
            ],
            "example": [
                "\n\t$('#id').kafeSticky(options)"
            ],
            "class": "kafe.plugin.sticky",
            "module": "kafe.plugin"
        },
        {
            "file": "kafe/date.js",
            "line": 63,
            "description": "Number of milliseconds in a second (1000 ms per second)",
            "itemtype": "property",
            "name": "SECOND",
            "type": "Number",
            "static": 1,
            "final": 1,
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 73,
            "description": "Number of milliseconds in a minute (60 seconds per minute)",
            "itemtype": "property",
            "name": "MINUTE",
            "type": "Number",
            "static": 1,
            "final": 1,
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 83,
            "description": "Number of milliseconds in an hour (60 minutes per hour)",
            "itemtype": "property",
            "name": "HOUR",
            "type": "Number",
            "static": 1,
            "final": 1,
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 93,
            "description": "Number of milliseconds in a day (24 hours per day)",
            "itemtype": "property",
            "name": "DAY",
            "type": "Number",
            "static": 1,
            "final": 1,
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 103,
            "description": "Number of milliseconds in a week (7 days per week)",
            "itemtype": "property",
            "name": "WEEK",
            "type": "Number",
            "static": 1,
            "final": 1,
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 113,
            "description": "Number of milliseconds in a month (4.348121428571429 weeks per month)",
            "itemtype": "property",
            "name": "MONTH",
            "type": "Number",
            "static": 1,
            "final": 1,
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 123,
            "description": "Number of milliseconds in a year (365.2422 days per year)",
            "itemtype": "property",
            "name": "YEAR",
            "type": "Number",
            "static": 1,
            "final": 1,
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 135,
            "description": "Get the day number out of the full year (365 days).",
            "itemtype": "method",
            "name": "getDayYear",
            "params": [
                {
                    "name": "d",
                    "description": "The date",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "The day of the year",
                "type": "Number"
            },
            "example": [
                "\n\tkafe.date.getDayYear(new Date('2013-07-17'));\n\t// returns 196"
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 160,
            "description": "Returns whether the date is within a leap year or not.",
            "itemtype": "method",
            "name": "isLeapYear",
            "params": [
                {
                    "name": "year",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "If it is a leap year or not.",
                "type": "Boolean"
            },
            "example": [
                "\n\tkafe.date.isLeapYear(2013);\n\t// returns false",
                "\n\tkafe.date.isLeapYear(2004);\n\t// returns true"
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 178,
            "description": "Get the number of days for all the months of a given year.",
            "itemtype": "method",
            "name": "getMaxMonth",
            "params": [
                {
                    "name": "year",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "An ordered array of day counts for each months of the given year.",
                "type": "Array[Number]"
            },
            "example": [
                "\n\tkafe.date.getMaxMonth(2013);\n\t// returns [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]",
                "\n\tkafe.date.getMaxMonth(2013)[3];\n\t// returns 30"
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 196,
            "description": "Get the full name of the months of the year.",
            "itemtype": "method",
            "name": "getMonthNames",
            "params": [
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "An ordered array of month names.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.date.getMonthNames('en');\n\t// returns [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", ... ]",
                "\n\tkafe.date.getMonthNames('en')[3];\n\t// returns \"April\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 214,
            "description": "Get the 1-char abbreviations of the months of the year.",
            "itemtype": "method",
            "name": "getMonth1Names",
            "params": [
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "An ordered array of 1-char month abbreviations.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.date.getMonth1Names('en');\n\t// returns [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"]",
                "\n\tkafe.date.getMonth1Names('en')[3];\n\t// returns \"A\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 232,
            "description": "Get the 2-char abbreviations of the months of the year.",
            "itemtype": "method",
            "name": "getMonth2Names",
            "params": [
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "An ordered array of 2-char month abbreviations.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.date.getMonth2Names('en');\n\t// returns [\"Ja\", \"Fe\", \"Mr\", \"Al\", \"Ma\", \"Jn\", \"Jl\", \"Au\", \"Se\", \"Oc\", \"No\", \"De\"]",
                "\n\tkafe.date.getMonth2Names('en')[3];\n\t// returns \"Al\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 251,
            "description": "Get the 3-char abbreviations of the months of the year.",
            "itemtype": "method",
            "name": "getMonth3Names",
            "params": [
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "An ordered array of 3-char month abbreviations.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.date.getMonth3Names('en');\n\t// returns [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]",
                "\n\tkafe.date.getMonth3Names('en')[3];\n\t// returns \"Apr\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 273,
            "description": "Get the full name of the days of the week.",
            "itemtype": "method",
            "name": "getWeekdayNames",
            "params": [
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "An ordered array of weekday names.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.date.getWeekdayNames('en');\n\t// returns [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]",
                "\n\tkafe.date.getWeekdayNames('en')[3];\n\t// returns \"Wednesday\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 291,
            "description": "Get the 1-char abbreviations of the days of the week.",
            "itemtype": "method",
            "name": "getWeekday1Names",
            "params": [
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "An ordered array of 1-char weekday abbreviations.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.date.getWeekday1Names('en');\n\t// returns [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]",
                "\n\tkafe.date.getWeekday1Names('en')[3];\n\t// returns \"W\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 309,
            "description": "Get the 2-char abbreviations of the days of the week.",
            "itemtype": "method",
            "name": "getWeekday2Names",
            "params": [
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "An ordered array of 2-char weekday abbreviations.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.date.getWeekday2Names('en');\n\t// returns [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]",
                "\n\tkafe.date.getWeekday2Names('en')[3];\n\t// returns \"We\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 327,
            "description": "Get the 3-char abbreviations of the days of the week.",
            "itemtype": "method",
            "name": "getWeekday3Names",
            "params": [
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "An ordered array of 3-char weekday abbreviations.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.date.getWeekday3Names('en');\n\t// returns [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]",
                "\n\tkafe.date.getWeekday3Names('en')[3];\n\t// returns \"Wed\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 349,
            "description": "Get a clean representation for all possible days of a month.",
            "itemtype": "method",
            "name": "getDayNames",
            "params": [
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "An ordered array of clean representations for all possible days of a month.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.date.getDayNames('en');\n\t// returns [\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\", \"9th\", ... ]",
                "\n\tkafe.date.getDayNames('en')[3];\n\t// returns \"4th\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 374,
            "description": "Flexible formatting a given date object.",
            "itemtype": "method",
            "name": "format",
            "params": [
                {
                    "name": "format",
                    "description": "A custom format composed of %- tokens. Characters that are not part of a token will be rendered literally.",
                    "type": "String",
                    "props": [
                        {
                            "name": "%Y,%y",
                            "description": "Year variants: [2011, 11]",
                            "type": "Token"
                        },
                        {
                            "name": "%M,%m,%A,%a,%B,%b,%C,%c",
                            "description": "Month variants: [01, 1, January, january, Jan, jan, JA, Ja]",
                            "type": "Token"
                        },
                        {
                            "name": "%D,%d,%e",
                            "description": "Day variants: [02, 2, 2nd]",
                            "type": "Token"
                        },
                        {
                            "name": "%W,%w,%X,%x,%Z,%z",
                            "description": "Weekday variants: [Sunday, sunday, Sun, sun, Su, su]",
                            "type": "Token"
                        },
                        {
                            "name": "%H,%h,%K,%k,%p",
                            "description": "Hour variants [15, 15, 03, 3, pm]",
                            "type": "Token"
                        },
                        {
                            "name": "%I,%i",
                            "description": "Minute variants [04, 4]",
                            "type": "Token"
                        },
                        {
                            "name": "%S,%s",
                            "description": "Second variants [05, 5]",
                            "type": "Token"
                        }
                    ]
                },
                {
                    "name": "date",
                    "description": "A date to be formatted.",
                    "type": "Date",
                    "optional": true,
                    "optdefault": "NOW"
                },
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "The formatted date.",
                "type": "String"
            },
            "example": [
                "\n\tkafe.date.format('%W, %A %e, %Y', new Date('2013-07-17'), 'en');\n\t// returns \"Tuesday, July 16th, 2013\"",
                "\n\tkafe.date.format('%W, %d %a, %Y', new Date('2013-07-17'), 'fr');\n\t// returns \"Mardi, 16 juillet, 2013\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 455,
            "description": "Get a relative time expression from a specific datetime.",
            "itemtype": "method",
            "name": "formatRelative",
            "params": [
                {
                    "name": "time",
                    "description": "Specific datetime object.",
                    "type": "Date"
                },
                {
                    "name": "now",
                    "description": "Comparative datetime object to calculate the time difference.",
                    "type": "Date",
                    "optional": true,
                    "optdefault": "NOW"
                },
                {
                    "name": "lang",
                    "description": "A two character language code.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_ENV_LANG"
                }
            ],
            "return": {
                "description": "The relative time expression",
                "type": "String"
            },
            "example": [
                "\n\tkafe.date.formatRelative(new Date('2013-07-19 6:00:00'), new Date('2013-07-19 20:00:00'), 'en');\n\t// returns \"14 hours ago\"",
                "\n\tkafe.date.formatRelative(new Date('2013-05-19'), new Date('2013-07-19'), 'en');\n\t// returns \"2 months ago\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 508,
            "description": "Parses a given datetime string into a standard datetime object.",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "dtstring",
                    "description": "Custom datetime string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The date object",
                "type": "Date"
            },
            "example": [
                "\n\tkafe.date.parse('2012-08-08T12:18:00.000-04:00');\n\t// returns Wed Aug 08 2012 12:18:00 GMT-0400 (EDT)",
                "\n\tkafe.date.parse('June 3, 2013');\n\t// returns Mon Jun 03 2013 00:00:00 GMT-0400 (EDT)"
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 590,
            "description": "Refreshes a dropdown containing the days of a given year/month combination.",
            "itemtype": "method",
            "name": "refreshSelectDays",
            "params": [
                {
                    "name": "obj",
                    "description": "The &lt;select&gt; element",
                    "type": "DOMElement"
                },
                {
                    "name": "month",
                    "description": "The month",
                    "type": "Number"
                },
                {
                    "name": "year",
                    "description": "The year",
                    "type": "Number"
                }
            ],
            "example": [
                "\n\t$('.select-month').on('change', function(e) {\n\t\tkafe.date.refreshSelectDays('.select-day', $(this).val(), $('.select-year').val());\n\t})"
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/date.js",
            "line": 635,
            "description": "Creates an html table calendar for a given month/year combination. You can also provide specific dates with destination url to be included in the rendered source.",
            "itemtype": "method",
            "name": "makeMonthCalendar",
            "params": [
                {
                    "name": "year",
                    "description": "The year",
                    "type": "Number"
                },
                {
                    "name": "month",
                    "description": "The month",
                    "type": "Number"
                },
                {
                    "name": "links",
                    "description": "The links by date",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "YYYY-MM-DD",
                            "description": "The links",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The rendered HTML",
                "type": "String"
            },
            "example": [
                "\n\tkafe.date.makeMonthCalendar(2013, 4, {'2013-04-03':'http://mybirthday.com/'});\n\t// returns \"<table data-month=\"2013-04\"><caption>Avril 2013</caption><thead><tr><th>Dim</th><th>Lun</th><th>Mar</th><th>Mer</th><th>Jeu</th><th>Ven</th><th>Sam</th></thead><tbody><tr><td>&nbsp;</td><td data-date=\"2013-04-01\"><span>1</span></td><td data-date=\"2013-04-02\"><span>2</span></td><td data-date=\"2013-04-03\"><a href=\"http://mybirthday.com/\">3</a></td><td data-date=\"2013-04-04\"><span>4</span></td><td data-date=\"2013-04-05\"><span>5</span></td><td data-date=\"2013-04-06\"><span>6</span></td></tr><tr><td data-date=\"2013-04-07\"><span>7</span></td><td data-date=\"2013-04-08\"><span>8</span></td><td data-date=\"2013-04-09\"><span>9</span></td><td data-date=\"2013-04-10\"><span>10</span></td><td data-date=\"2013-04-11\"><span>11</span></td><td data-date=\"2013-04-12\"><span>12</span></td><td data-date=\"2013-04-13\"><span>13</span></td></tr><tr><td data-date=\"2013-04-14\"><span>14</span></td><td data-date=\"2013-04-15\"><span>15</span></td><td data-date=\"2013-04-16\"><span>16</span></td><td data-date=\"2013-04-17\"><span>17</span></td><td data-date=\"2013-04-18\"><span>18</span></td><td data-date=\"2013-04-19\"><span>19</span></td><td data-date=\"2013-04-20\"><span>20</span></td></tr><tr><td data-date=\"2013-04-21\"><span>21</span></td><td data-date=\"2013-04-22\"><span>22</span></td><td data-date=\"2013-04-23\"><span>23</span></td><td data-date=\"2013-04-24\"><span>24</span></td><td data-date=\"2013-04-25\"><span>25</span></td><td data-date=\"2013-04-26\"><span>26</span></td><td data-date=\"2013-04-27\"><span>27</span></td></tr><tr><td data-date=\"2013-04-28\"><span>28</span></td><td data-date=\"2013-04-29\"><span>29</span></td><td data-date=\"2013-04-30\"><span>30</span></td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table>\""
            ],
            "class": "kafe.date",
            "module": "kafe"
        },
        {
            "file": "kafe/form.js",
            "line": 14,
            "description": "Add a class on focus to all input/textarea/select controls and the label placed immediatly before it.",
            "itemtype": "method",
            "name": "focus",
            "example": [
                "\n\tkafe.form.focus();"
            ],
            "class": "kafe.form",
            "module": "kafe"
        },
        {
            "file": "kafe/form.js",
            "line": 33,
            "description": "Adds support for the placeholder attribute for older browsers (Older than IE10). If applied, a \"Placeholder\" class will also be present when the placeholder text is shown.",
            "itemtype": "method",
            "name": "placeholder",
            "params": [
                {
                    "name": "selector",
                    "description": "Selector of text-based form elements. Defaults to 'input&#91;placeholder&#93;, textarea&#91;placeholder&#93;' when left undefined.",
                    "type": "String|jQueryObject|DOMElement",
                    "optional": true
                }
            ],
            "example": [
                "\n\tkafe.form.placeholder('.search-field');",
                "\n\t$('.search-field').kafe('placeholder');"
            ],
            "class": "kafe.form",
            "module": "kafe"
        },
        {
            "file": "kafe/form.js",
            "line": 75,
            "description": "Detects the RETURN key, then triggers a callback.",
            "itemtype": "method",
            "name": "onEnter",
            "params": [
                {
                    "name": "elements",
                    "description": "Selector of text-based form elements.",
                    "type": "String|jQueryObject|DOMElement"
                },
                {
                    "name": "callback",
                    "description": "Function to be fired by the keypress.",
                    "type": "Function"
                }
            ],
            "example": [
                "\n\tkafe.form.onEnter('.search-field', function(input) {\n\t\t$(input).parents('form').submit();\n\t});",
                "\n\t$('.search-field').kafe('onEnter', function(input) {\n\t\t$(input).parents('form').submit();\n\t});"
            ],
            "class": "kafe.form",
            "module": "kafe"
        },
        {
            "file": "kafe/form.js",
            "line": 100,
            "description": "Automaticaly jump the focus to the next field once the maxlength has been reached.",
            "itemtype": "method",
            "name": "autofocusOnNext",
            "params": [
                {
                    "name": "elements",
                    "description": "Selector of text-based form elements.",
                    "type": "String|jQueryObject|DOMElement"
                }
            ],
            "example": [
                "\n\tkafe.form.autofocusOnNext('.first-name, .last-name, .email');",
                "\n\t$('.first-name, .last-name, .email').kafe('autofocusOnNext');"
            ],
            "class": "kafe.form",
            "module": "kafe"
        },
        {
            "file": "kafe/form.js",
            "line": 126,
            "description": "Adds a simulated maxlength support for textarea elements.",
            "itemtype": "method",
            "name": "maxLength",
            "params": [
                {
                    "name": "elements",
                    "description": "Selector of text-based form elements.",
                    "type": "String|jQueryObject|DOMElement"
                },
                {
                    "name": "max",
                    "description": "Maximum number of characters.",
                    "type": "Integer"
                },
                {
                    "name": "block",
                    "description": "Prevent further character entry once the limit is reached.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "Callback triggered when the character limit is reached. The current number of characters is provided as the first argument of the callback.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "example": [
                "\n\tkafe.form.maxLength('.twitter-post', 140, false, function(count) {\n\t\tkafe.log(count);\n\t});",
                "\n\t$('.twitter-post').kafe('maxLength', 140, false, function(count) {\n\t\tkafe.log(count);\n\t});"
            ],
            "class": "kafe.form",
            "module": "kafe"
        },
        {
            "file": "kafe/form.js",
            "line": 174,
            "description": "Calculates the password strength value of given fields.",
            "itemtype": "method",
            "name": "passwordStrength",
            "params": [
                {
                    "name": "elements",
                    "description": "Selector of text-based form elements.",
                    "type": "String|jQueryObject|DOMElement"
                },
                {
                    "name": "callback",
                    "description": "Callback triggered when the value is changed. The calculated strengh value is provided as the first argument of the callback.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "example": [
                "\n\tkafe.form.passwordStrength('.password', function(strengh) {\n\t\tkafe.log(strengh);\n\t});",
                "\n\t$('.password').kafe('passwordStrength', function(strengh) {\n\t\tkafe.log(strengh);\n\t});"
            ],
            "class": "kafe.form",
            "module": "kafe"
        },
        {
            "file": "kafe/form.js",
            "line": 273,
            "description": "Sanitize form text entry for .NET validator.",
            "itemtype": "method",
            "name": "sanitizeFormData",
            "params": [
                {
                    "name": "elements",
                    "description": "Reference to the current .NET form.",
                    "type": "String|jQueryObject|DOMElement"
                }
            ],
            "example": [
                "\n\tkafe.form.sanitizeFormData('#Form1');",
                "\n\t$('#Form1').kafe('sanitizeFormData');"
            ],
            "class": "kafe.form",
            "module": "kafe"
        },
        {
            "file": "kafe/geolocation.js",
            "line": 45,
            "description": "Get the current geolocalization information of the client.",
            "itemtype": "method",
            "name": "locate",
            "params": [
                {
                    "name": "parameters",
                    "description": "Parameters for the current request.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "msgContainer",
                            "description": "Element used to show status messages.",
                            "type": "String|jQueryObject|DOMElement",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "lang",
                            "description": "A two character language code.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "CURRENT_ENV_LANG"
                        },
                        {
                            "name": "success",
                            "description": "Callback triggered when geolocalization informations have been successful retrieved. An object containing the informations is passed as the first argument.",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "error",
                            "description": "Callback triggered on geolocalization errors. The error message is passed as the first argument.",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "undefined"
                        }
                    ]
                }
            ],
            "example": [
                "\n\tkafe.geolocation.locate({\n\t\tmsgContainer: '#GeoLocStatus', lang: 'en',\n\t\tsuccess: function(coords) {\n\t\t\tkafe.log('latitude: ' + coords.latitude);\n\t\t\tkafe.log('longitude: ' + coords.longitude);\n\t\t}\n\t\terror: function(msg) {\n\t\t\tkafe.log('Cannot geoloc: ' + msg);\n\t\t}\n\t});"
            ],
            "class": "kafe.geolocation",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 120,
            "description": "kafe version",
            "itemtype": "property",
            "name": "_vesyon",
            "type": "String",
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 128,
            "description": "kafe author",
            "itemtype": "property",
            "name": "_griyaj",
            "type": "String",
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 136,
            "description": "Versions of dependencies / kafe modules",
            "itemtype": "property",
            "name": "_chaje",
            "type": "Object",
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 151,
            "description": "jQuery defined under window.kafejQuery  \nref: [http://jquery.com/](http://jquery.com/)",
            "itemtype": "property",
            "name": "dependencies.jQuery",
            "type": "Object",
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 160,
            "description": "underscore.js defined under window._  \nref: [http://underscorejs.org/](http://underscorejs.org/)",
            "itemtype": "property",
            "name": "dependencies.underscore",
            "type": "Object",
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 169,
            "description": "Modernizr defined under window.Modernizr  \nref: [http://modernizr.com/](http://modernizr.com/)",
            "itemtype": "property",
            "name": "dependencies.Modernizr",
            "type": "Object",
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 191,
            "description": "Create a instantiable object  \nBy John Resig (MIT Licensed)  \nref: [http://ejohn.org/blog/simple-class-instantiation/](http://ejohn.org/blog/simple-class-instantiation/)",
            "itemtype": "method",
            "name": "fn.createInstantiableObject",
            "return": {
                "description": "The instantiable object",
                "type": "Object"
            },
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 210,
            "description": "Return the language if available or else 'en'",
            "itemtype": "method",
            "name": "fn.lang",
            "params": [
                {
                    "name": "dict",
                    "description": "The dictionary to check against",
                    "type": "Object"
                },
                {
                    "name": "lang",
                    "description": "The language to check",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The available language",
                "type": "String"
            },
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 224,
            "description": "Add method as jQuery plugin",
            "itemtype": "method",
            "name": "fn.plugIntojQuery",
            "params": [
                {
                    "name": "name",
                    "description": "The jQuery plugin name",
                    "type": "String"
                },
                {
                    "name": "methods",
                    "description": "Action:Method hash",
                    "type": "Object[Function]"
                }
            ],
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 253,
            "description": "Environment constants",
            "itemtype": "method",
            "name": "env",
            "params": [
                {
                    "name": "name",
                    "description": "The constant to get/set",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The value of the environment constant",
                "type": "String"
            },
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 309,
            "description": "Add module to core",
            "itemtype": "method",
            "name": "bonify",
            "params": [
                {
                    "name": "options",
                    "description": "The options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "name",
                            "description": "The module name",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The module version",
                            "type": "String"
                        },
                        {
                            "name": "obj",
                            "description": "The module itself",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 333,
            "description": "Add a homebrewed plugin",
            "itemtype": "method",
            "name": "plug",
            "params": [
                {
                    "name": "options",
                    "description": "The options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "name",
                            "description": "The plugin name",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The plugin version",
                            "type": "String"
                        },
                        {
                            "name": "obj",
                            "description": "The plugin itself",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 348,
            "description": "Add an external plugin extension",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "options",
                    "description": "The options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "name",
                            "description": "The plugin extension name",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The plugin extension version",
                            "type": "String"
                        },
                        {
                            "name": "obj",
                            "description": "The plugin extension itself",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/kafe.js",
            "line": 363,
            "description": "Throw kafe errors",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "error",
                    "description": "The error with description",
                    "type": "Error"
                }
            ],
            "return": {
                "description": "error The error",
                "type": "Error"
            },
            "example": [
                "\n\tkafe.error(new Error('barf'));"
            ],
            "class": "kafe",
            "module": "kafe"
        },
        {
            "file": "kafe/number.js",
            "line": 13,
            "description": "Converts a number to its roman numeral value.",
            "itemtype": "method",
            "name": "toRoman",
            "params": [
                {
                    "name": "number",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The roman numeral value.",
                "type": "String"
            },
            "example": [
                "\n\tkafe.number.toRoman(1954);\n\t// returns \"MCMLIV\""
            ],
            "class": "kafe.number",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 229,
            "description": "Returns the local value for a specific key.",
            "itemtype": "method",
            "name": "getPersistentItem",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If not expiration flag was trigged (cookie or datetime), returns the local storage value. Otherwise, returns *undefined*.",
                "type": "String"
            },
            "example": [
                "\n\tkafe.storage.getPersistentItem('history:last-visit');"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 242,
            "description": "Returns the session value for a specific key.",
            "itemtype": "method",
            "name": "getSessionItem",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If not expiration flag was trigged (cookie or datetime), returns the session storage value. Otherwise, returns *undefined*.",
                "type": "String"
            },
            "example": [
                "\n\tkafe.storage.getSessionItem('user:first-name');"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 255,
            "description": "Sets the local value for a specific key with or without an expiration flag. Namespacing can be defined by using the ':' character.",
            "itemtype": "method",
            "name": "setPersistentItem",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Expiration parameters",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "undefined",
                    "props": [
                        {
                            "name": "expires",
                            "description": "Sets a cookie of the specified key as the expiration flag. Changes to the cookie's value will flag the local storage value for the provided key as expired.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "expires",
                            "description": "Sets a time based expiration flag in *seconds*. After that time period, the local storage value for the provided key will be flagged as expired.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "undefined"
                        }
                    ]
                }
            ],
            "example": [
                "\n\tkafe.storage.setPersistentItem('history:last-visit', '2013-07-21', { expires: 3600 });\n\t// The local storage value will return undefined in one hour.",
                "\n\tkafe.storage.setPersistentItem('history:last-visit', '2013-07-21', { expires: 'last-visit-cookie' });\n\t// The local storage value will return undefined if the value of the cookie 'last-visit-cookie' is changed."
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 275,
            "description": "Sets the session value for a specific key with or without an expiration flag. Namespacing can be defined by using the ':' character.",
            "itemtype": "method",
            "name": "setSessionItem",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Expiration parameters",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "undefined",
                    "props": [
                        {
                            "name": "expires",
                            "description": "Sets a cookie of the specified key as the expiration flag. Changes to the cookie's value will flag the session storage value for the provided key as expired.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "expires",
                            "description": "Sets a time based expiration flag in *seconds*. After that time period, the session storage value for the provided key will be flagged as expired.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "undefined"
                        }
                    ]
                }
            ],
            "example": [
                "\n\tkafe.storage.setSessionItem('user:first-name', 'John', { expires: 3600 });\n\t// The session storage value will return undefined in one hour.",
                "\n\tkafe.storage.setSessionItem('user:first-name', 'John', { expires: 'logged-user' });\n\t// The session storage value will return undefined if the value of the cookie 'logged-user' is changed."
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 295,
            "description": "Removes the local storage value for a specific key.",
            "itemtype": "method",
            "name": "removePersistentItem",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "example": [
                "\n\tkafe.storage.removePersistentItem('history:last-visit');"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 307,
            "description": "Removes the session storage value for a specific key.",
            "itemtype": "method",
            "name": "removeSessionItem",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "example": [
                "\n\tkafe.storage.removeSessionItem('user:first-name');"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 321,
            "description": "Returns an array of local storage keys for a specific namespace.",
            "itemtype": "method",
            "name": "getPersistentNamespaceKeys",
            "params": [
                {
                    "name": "namespace",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A list of keys.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.storage.setPersistentItem('history:last-visit', '2013-07-21');\n\tkafe.storage.setPersistentItem('history:last-page', '/about-us');\n\t\n\tkafe.storage.getPersistentNamespaceKeys('history');\n\t// returns [\"history:last-page\", \"history:last-visit\"]"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 338,
            "description": "Returns an array of session storage keys for a specific namespace.",
            "itemtype": "method",
            "name": "getSessionNamespaceKeys",
            "params": [
                {
                    "name": "namespace",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A list of keys.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.storage.setSessionItem('user:first-name', 'John');\n\tkafe.storage.setSessionItem('user:last-name', 'Doe');\n\t\n\tkafe.storage.getSessionNamespaceKeys('user');\n\t// returns [\"user:first-name\", \"user:last-name\"]"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 355,
            "description": "Returns all local storage key values for a specific namespace.",
            "itemtype": "method",
            "name": "getPersistentNamespaceItems",
            "params": [
                {
                    "name": "namespace",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An object containing all local key/value combinations for the namespace.",
                "type": "Object"
            },
            "example": [
                "\n\tkafe.storage.setPersistentItem('history:last-visit', '2013-07-21');\n\tkafe.storage.setPersistentItem('history:last-page', '/about-us');\n\t\n\tkafe.storage.getPersistentNamespaceItems('history');\n\t// returns { \"history:last-page\": \"/about-us\", \"history:last-visit\": \"2013-07-21\" }"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 372,
            "description": "Returns all session storage key values for a specific namespace.",
            "itemtype": "method",
            "name": "getSessionNamespaceItems",
            "params": [
                {
                    "name": "namespace",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An object containing all session key/value combinations for the namespace.",
                "type": "Object"
            },
            "example": [
                "\n\tkafe.storage.setSessionItem('user:first-name', 'John');\n\tkafe.storage.setSessionItem('user:last-name', 'Doe');\n\t\n\tkafe.storage.getSessionNamespaceItems('user');\n\t// returns { \"user:first-name\": \"John\", \"user:last-name\": \"Doe\" }"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 389,
            "description": "Removes all local storage keys of a specific namespace.",
            "itemtype": "method",
            "name": "removePersistentNamespace",
            "params": [
                {
                    "name": "namespace",
                    "description": "",
                    "type": "String"
                }
            ],
            "example": [
                "\n\tkafe.storage.removePersistentNamespace('history');"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 401,
            "description": "Removes all session storage keys of a specific namespace.",
            "itemtype": "method",
            "name": "removeSessionNamespace",
            "params": [
                {
                    "name": "namespace",
                    "description": "",
                    "type": "String"
                }
            ],
            "example": [
                "\n\tkafe.storage.removeSessionNamespace('user');"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 415,
            "description": "Returns an array of all local storage keys.",
            "itemtype": "method",
            "name": "getAllPersistentKeys",
            "return": {
                "description": "A list of keys.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.storage.setPersistentItem('history:last-visit', '2013-07-21');\n\tkafe.storage.setPersistentItem('website:show-ads', 'true');\n\t\n\tkafe.storage.getAllPersistentKeys();\n\t// returns [\"history:last-visit\", \"website:show-ads\"]"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 431,
            "description": "Returns an array of all session storage keys.",
            "itemtype": "method",
            "name": "getAllSessionKeys",
            "return": {
                "description": "A list of keys.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.storage.setSessionItem('user:first-name', 'John');\n\tkafe.storage.setSessionItem('preferences:tutorials', 'false');\n\t\n\tkafe.storage.getAllSessionKeys();\n\t// returns [\"user:first-name\", \"preferences:tutorials\"]"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 447,
            "description": "Returns all local storage key values.",
            "itemtype": "method",
            "name": "getAllPersistentItems",
            "return": {
                "description": "An object containing all local key/value combinations.",
                "type": "Object"
            },
            "example": [
                "\n\tkafe.storage.setPersistentItem('history:last-visit', '2013-07-21');\n\tkafe.storage.setPersistentItem('website:show-ads', 'true');\n\t\n\tkafe.storage.getAllPersistentItems();\n\t// returns { \"history:last-visit\": \"2013-07-21\", \"settings:show-ads\": \"true\" }"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 463,
            "description": "Returns all session storage key values.",
            "itemtype": "method",
            "name": "getAllSessionItems",
            "return": {
                "description": "An object containing all session key/value combinations.",
                "type": "Object"
            },
            "example": [
                "\n\tkafe.storage.setSessionItem('user:first-name', 'John');\n\tkafe.storage.setSessionItem('preferences:tutorials', 'false');\n\t\n\tkafe.storage.getAllSessionItems();\n\t// returns { \"preferences:tutorials\": \"false\", \"user:first-name\": \"John\" }"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 479,
            "description": "Removes all local storage keys.",
            "itemtype": "method",
            "name": "removeAllPersistent",
            "example": [
                "\n\tkafe.storage.removeAllPersistent();"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 490,
            "description": "Removes all session storage keys.",
            "itemtype": "method",
            "name": "removeAllSession",
            "example": [
                "\n\tkafe.storage.removeAllSession();"
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/storage.js",
            "line": 504,
            "description": "Get the JSON response of a webservice and keep it in the session storage with or without an expiration flag. Use this shorthand method to prevent unnecessary communication with the server on ajax heavy websites. All session keys used with this method are part of the *kafe-storage-getJSON* namespace.",
            "itemtype": "method",
            "name": "getJSON",
            "params": [
                {
                    "name": "url",
                    "description": "URL address of the webservice.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Other parameters",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "expires",
                            "description": "Sets a cookie of the specified key as the expiration flag. Changes to the cookie's value will force a new call to the webservice on the next use.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "expires",
                            "description": "Sets a time based expiration flag in *seconds*. After that time period, the next use will call the webservice instead of using the session storage.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "callback",
                            "description": "Callback triggered if the response is successful or a session stored value exists. The response (or stored value) is passed as the first argument.",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "undefined"
                        }
                    ]
                }
            ],
            "example": [
                "\n\tkafe.storage.getJSON('/UserServices/GetUserInfos?username=john_doe', { expires: 3600 });\n\t// Using this same line will use the session stored value instead of calling the service unless one hour has passed."
            ],
            "class": "kafe.storage",
            "module": "kafe"
        },
        {
            "file": "kafe/string-encrypt.js",
            "line": 20,
            "description": "Encrypts a given string to md5.",
            "itemtype": "method",
            "name": "md5",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The encrypted value.",
                "type": "String"
            },
            "example": [
                "\n\tkafe.string.encrypt.md5('kafe is awesome.');\n\t// returns \"1fc5f96ff478b0c37baaf27506063603\""
            ],
            "class": "kafe.string.encrypt",
            "module": "kafe"
        },
        {
            "file": "kafe/string-validate.js",
            "line": 22,
            "description": "Checks if a string is empty or contains only whitespaces.",
            "itemtype": "method",
            "name": "isEmpty",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If true, the string is empty or contains only whitespaces.",
                "type": "Boolean"
            },
            "example": [
                "\n\tkafe.string.validate.isEmpty('kafe is awesome.');\n\t// returns false",
                "\n\tkafe.string.validate.isEmpty(' ');\n\t// returns true"
            ],
            "class": "kafe.string.validate",
            "module": "kafe"
        },
        {
            "file": "kafe/string-validate.js",
            "line": 39,
            "description": "Checks if a string is numeric.",
            "itemtype": "method",
            "name": "isNum",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If true, the string could be converted to a number.",
                "type": "Boolean"
            },
            "example": [
                "\n\tkafe.string.validate.isNum('k4f3');\n\t// returns false",
                "\n\tkafe.string.validate.isNum('43');\n\t// returns true"
            ],
            "class": "kafe.string.validate",
            "module": "kafe"
        },
        {
            "file": "kafe/string-validate.js",
            "line": 56,
            "description": "Checks if a string is a valid email address.",
            "itemtype": "method",
            "name": "isEmail",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If true, the string is a valid email address.",
                "type": "Boolean"
            },
            "example": [
                "\n\tkafe.string.validate.isEmail('mailbox@mailaddress');\n\t// returns false",
                "\n\tkafe.string.validate.isEmail('kafe.feedback@absolunet.com');\n\t// returns true"
            ],
            "class": "kafe.string.validate",
            "module": "kafe"
        },
        {
            "file": "kafe/string-validate.js",
            "line": 75,
            "description": "Checks if a string is a valid or part of a valid Canadian postal code.",
            "itemtype": "method",
            "name": "isPostalCode",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "format",
                    "description": "Validation pattern (Regular expression). Default pattern is *([a-z][0-9]){3}*. Can also be set to *A1A 1A1* for a single precise value or as *A1A* and *1A1* when divided into two values.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "If true, the string matches the validation format.",
                "type": "Boolean"
            },
            "example": [
                "\n\tkafe.string.validate.isPostalCode('KAF123');\n\t// returns false",
                "\n\tkafe.string.validate.isPostalCode('K4F 3F3', 'A1A 1A1');\n\t// returns true"
            ],
            "class": "kafe.string.validate",
            "module": "kafe"
        },
        {
            "file": "kafe/string-validate.js",
            "line": 100,
            "description": "Checks if a string is a valid credit card number and fits a specific brand pattern.\n\nSource: [http://davidwalsh.name/validate-credit-cards](http://davidwalsh.name/validate-credit-cards)",
            "itemtype": "method",
            "name": "isCreditCard",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "cardtype",
                    "description": "A credit card brand abbreviation. Possible values are **mc** (Master Card), **ec** (Electronic Cash), **vi** (Visa), **ax** (American Express), **dc** (DC), **bl** (BL), **di** (Diner's Club), **jcb** (JCB) or **er** (ER).",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "If true, the string is a valid credit card number.",
                "type": "Boolean"
            },
            "example": [
                "\n\tkafe.string.validate.isCreditCard('k789 kafe 3789', 'mc');\n\t// returns false",
                "\n\tkafe.string.validate.isCreditCard('1234 5678 1234 5678', 'vi');\n\t// returns true"
            ],
            "class": "kafe.string.validate",
            "module": "kafe"
        },
        {
            "file": "kafe/string.js",
            "line": 21,
            "description": "Removes accented charaters from a string.",
            "itemtype": "method",
            "name": "removeAccent",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The unaccented string.",
                "type": "String"
            },
            "example": [
                "\n\tkafe.string.removeAccent('Kafe signifie café en créole.');\n\t// returns \"Kafe signifie cafe en creole.\""
            ],
            "class": "kafe.string",
            "module": "kafe"
        },
        {
            "file": "kafe/string.js",
            "line": 47,
            "description": "Transforms a JSON string into a javascript object.",
            "itemtype": "method",
            "name": "toObject",
            "params": [
                {
                    "name": "string",
                    "description": "A JSON string.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A valid javascript object.",
                "type": "Object"
            },
            "example": [
                "\n\tkafe.string.toObject('{\"UserId\":\"456\",\"Items\":[\"first\", \"second\", \"last\"],\"State\":true,\"TotalAmount\":52,\"Taxes\":[]}');\n\t// returns Object {UserId: \"456\", Items: Array[3], State: true, TotalAmount: 52, Taxes: Array[0]}"
            ],
            "class": "kafe.string",
            "module": "kafe"
        },
        {
            "file": "kafe/string.js",
            "line": 77,
            "description": "Generates a random GUID/UUID. (Version 4, random)",
            "itemtype": "method",
            "name": "generateGuid",
            "return": {
                "description": "A random valid GUID/UUID.",
                "type": "String"
            },
            "example": [
                "\n\tkafe.string.generateGuid();\n\t// returns \"c573f4f3-982a-4046-818a-083757f98804\""
            ],
            "class": "kafe.string",
            "module": "kafe"
        },
        {
            "file": "kafe/style.js",
            "line": 14,
            "description": "Equalizes the height css property of every element in a selector. If no height is currently present, the method computes the height values before equalizing. Elements must be visible at the time or will be considered as having a height of 0.",
            "itemtype": "method",
            "name": "equalHeight",
            "params": [
                {
                    "name": "selector",
                    "description": "The affected elements.",
                    "type": "String|jQueryObject|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Additional options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "nbPerRow",
                            "description": "Allows the elements to be compared in groups of a given number.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "resetHeight",
                            "description": "Resets css height of all elements to 'auto' before comparing.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "borderBox",
                            "description": "If true, heights will be computed as if the elements had the 'box-sizing' css attribute to 'border-box'.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "example": [
                "\n\tkafe.style.equalHeight('.products', { nbPerRow: 3, resetHeight: true });",
                "\n\t$('.products').kafe('equalHeight', { nbPerRow: 3, resetHeight: true });"
            ],
            "class": "kafe.style",
            "module": "kafe"
        },
        {
            "file": "kafe/style.js",
            "line": 64,
            "description": "Replaces &lt;hr&gt; tags into &lt;div class=\"hr\"&gt;&lt;/div&gt; tags to eliminate styling restrictions.",
            "itemtype": "method",
            "name": "replaceHr",
            "params": [
                {
                    "name": "selector",
                    "description": "Restricts the process to a specific context.",
                    "type": "String|jQueryObject|DOMElement",
                    "optional": true,
                    "optdefault": "'hr'"
                }
            ],
            "example": [
                "\n\tkafe.style.replaceHr('.page-content');",
                "\n\t$('.page-content').kafe('replaceHr');"
            ],
            "class": "kafe.style",
            "module": "kafe"
        },
        {
            "file": "kafe/style.js",
            "line": 80,
            "description": "Vertically align an element inside its parent. Elements must be visible at the time or positioning calculations will fail.",
            "itemtype": "method",
            "name": "vAlign",
            "params": [
                {
                    "name": "selector",
                    "description": "Affected elements.",
                    "type": "String|jQueryObject|DOMElement"
                },
                {
                    "name": "parent",
                    "description": "Container in which we want to be centered.",
                    "type": "String|jQueryObject|DOMElement",
                    "optional": true,
                    "optdefault": "DIRECT_PARENT"
                }
            ],
            "example": [
                "\n\tkafe.style.vAlign('.menu-items > .label');",
                "\n\t$('.menu-items > .label').kafe('vAlign');"
            ],
            "class": "kafe.style",
            "module": "kafe"
        },
        {
            "file": "kafe/url.js",
            "line": 36,
            "description": "Parses a querystring as a key/value list and creates a javascript object.",
            "itemtype": "method",
            "name": "parseSearchParams",
            "params": [
                {
                    "name": "querystring",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_LOCATION_SEARCH"
                }
            ],
            "return": {
                "description": "An object represention of the querystring.",
                "type": "Object"
            },
            "example": [
                "\n\tkafe.url.parseSearchParams('?group=players&team=blue&ranking=3');\n\t// returns Object {group: \"players\", team: \"blue\", ranking: \"3\"}"
            ],
            "class": "kafe.url",
            "module": "kafe"
        },
        {
            "file": "kafe/url.js",
            "line": 51,
            "description": "Parses a querystring as a path and creates an ordered array.",
            "itemtype": "method",
            "name": "parseSearchPath",
            "params": [
                {
                    "name": "querystring",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_LOCATION_SEARCH"
                }
            ],
            "return": {
                "description": "An array represention of the querystring path.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.url.parseSearchPath('?/Players/Teams/Blue');\n\t// returns [\"Players\", \"Teams\", \"Blue\"]"
            ],
            "class": "kafe.url",
            "module": "kafe"
        },
        {
            "file": "kafe/url.js",
            "line": 67,
            "description": "Parses a hash string as a key/value list and creates a javascript object.",
            "itemtype": "method",
            "name": "parseHashParams",
            "params": [
                {
                    "name": "hash",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_LOCATION_HASH"
                }
            ],
            "return": {
                "description": "An object represention of the hash string.",
                "type": "Object"
            },
            "example": [
                "\n\tkafe.url.parseHashParams('#color=blue&size=large&extras=false');\n\t// returns Object {color: \"blue\", size: \"large\", extras: \"false\"}"
            ],
            "class": "kafe.url",
            "module": "kafe"
        },
        {
            "file": "kafe/url.js",
            "line": 82,
            "description": "Parses a hash string as a path and creates an ordered array.",
            "itemtype": "method",
            "name": "parseHashPath",
            "params": [
                {
                    "name": "hash",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_LOCATION_HASH"
                }
            ],
            "return": {
                "description": "An array represention of the hash path.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.url.parseHashPath('#/clothing/man/shirts');\n\t// returns [\"clothing\", \"man\", \"shirts\"]"
            ],
            "class": "kafe.url",
            "module": "kafe"
        },
        {
            "file": "kafe/url.js",
            "line": 98,
            "description": "Parses a hashbang (#!) as a key/value list and creates a javascript object.",
            "itemtype": "method",
            "name": "parseAjaxParams",
            "params": [
                {
                    "name": "hashbang",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_LOCATION_HASH"
                }
            ],
            "return": {
                "description": "An object represention of the hashbang.",
                "type": "Object"
            },
            "example": [
                "\n\tkafe.url.parseAjaxParams('#!color=blue&size=large&extras=false');\n\t// returns Object {color: \"blue\", size: \"large\", extras: \"false\"}"
            ],
            "class": "kafe.url",
            "module": "kafe"
        },
        {
            "file": "kafe/url.js",
            "line": 113,
            "description": "Parses a hashbang (#!) as a path and creates an ordered array.",
            "itemtype": "method",
            "name": "parseAjaxPath",
            "params": [
                {
                    "name": "hashbang",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "CURRENT_LOCATION_HASH"
                }
            ],
            "return": {
                "description": "An array represention of the hashbang path.",
                "type": "Array[String]"
            },
            "example": [
                "\n\tkafe.url.parseAjaxPath('#!/clothing/man/shirts');\n\t// returns [\"clothing\", \"man\", \"shirts\"]"
            ],
            "class": "kafe.url",
            "module": "kafe"
        }
    ],
    "warnings": []
}